#
# author: Nils Krumnack, with input from Attila Krasznahorkay and Max Baak
#

# For documentation check:
# https://twiki.cern.ch/twiki/bin/viewauth/Atlas/GoodRunsLists



#
# root setup code
#

CURDIR := $(shell pwd | xargs dirname)/StandAlone

include @ROOT_MAKE@



#
# generic configuration options
#

DEPLIST := $(shell $(ROOTCOREDIR)/scripts/get_dependency.sh $(PACKAGE_DEP))

PRGDIR = ../util
SRCDIR = ../Root
OBJDIR = ../obj
LIBDIR = ../StandAlone
BINDIR = ../bin

LINK_DEF  = $(SRCDIR)/LinkDef.h
DICT_BASE = $(OBJDIR)/$(PACKAGE)_Dict
DICT_CINT = $(DICT_BASE).cxx

SRCFILES = $(wildcard $(SRCDIR)/*.cxx)
PRGFILES = $(wildcard $(PRGDIR)/*.cxx)
OBJFILES = $(patsubst %.cxx,%.o,$(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(SRCFILES))) $(shell test -f $(LINK_DEF) && echo $(DICT_BASE).o)
DEPFILES = $(patsubst %.cxx,%.d,$(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(SRCFILES))) $(patsubst $(PRGDIR)/%.cxx,$(OBJDIR)/%.d,$(PRGFILES)) $(shell test -f $(LINK_DEF) && echo $(OBJDIR)/LinkDef.d)
LIBFILE  = $(LIBDIR)/lib$(PACKAGE).so
BINFILES = $(patsubst $(PRGDIR)/%.cxx,$(BINDIR)/%,$(PRGFILES))



CXXFLAGS   += -I.. -I$(ROOTCOREDIR)/include $(PACKAGE_CXXFLAGS) -DROOTCORE $(shell root-config --cflags)
MFLAGS      = -MM
SOFLAGS    += $(PACKAGE_LDFLAGS) $(shell root-config --ldflags)

ifeq ($(PLATFORM),macosx)
SOFLAGS    += -install_name @rpath/lib$(PACKAGE).so
endif

ifneq ($(BOOSTINCDIR),)
CXXFLAGS   += -I$(BOOSTINCDIR)
endif

ifeq ($(PACKAGE_NOOPT),1)
OPT  =
OPT2 =
endif


#
# generic rules
#

default: $(DEPFILES) shlib $(BINFILES)

shlib: $(LIBFILE)

clean:
	@rm -rf $(BINDIR) $(OBJDIR) $(LIBDIR)

RC_OBJ = \
  @echo "Compiling $<" ; \
  mkdir -p $(OBJDIR) ; \
  $(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

RC_DEP = \
  @echo "Making dependency for $<" ; \
  set -e; rm -f $@; mkdir -p $(OBJDIR) ; \
  $(CXX) $(CXXFLAGS) $(INCLUDES) $(MFLAGS) $< > $@.$$$$; \
  sed 's,\($*\)\.o[ :]*,$(OBJDIR)/\1.o $@ : ,g' < $@.$$$$ > $@; \
  rm -f $@.$$$$

$(OBJDIR)/%.o : $(SRCDIR)/%.cxx
	$(RC_OBJ)

$(OBJDIR)/%.d : $(SRCDIR)/%.cxx
	$(RC_DEP)

$(OBJDIR)/%.o : $(PRGDIR)/%.cxx
	$(RC_OBJ)

$(OBJDIR)/%.d : $(PRGDIR)/%.cxx
	$(RC_DEP)

$(OBJDIR)/%.o : $(OBJDIR)/%.cxx
	$(RC_OBJ)

$(OBJDIR)/%.d : $(OBJDIR)/%.cxx
	$(RC_DEP)

$(DICT_CINT) : $(LINK_DEF)
	@echo "Running rootcint"
	@mkdir -p $(OBJDIR)
	@$(ROOTSYS)/bin/rootcint -f $(DICT_CINT) -c -p  $(CXXFLAGS) $(LINK_DEF)
	@grep include $(LINK_DEF) >$(DICT_CINT)-tmp || true
	@cat $(DICT_CINT) >>$(DICT_CINT)-tmp
	@mv $(DICT_CINT)-tmp $(DICT_CINT)

$(OBJDIR)/LinkDef.d : $(LINK_DEF)
	@echo "Making dependency for $<" ; \
	set -e; rm -f $@; mkdir -p $(OBJDIR) ; \
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(MFLAGS) $< > $@.$$$$; \
	sed 's,LinkDef\.o[ :]*,$(OBJDIR)/LinkDef.d $(DICT_BASE).cxx : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$


$(LIBFILE): $(OBJFILES)
	@echo "Linking $@"
	@mkdir -p $(LIBDIR)
	@$(LD) $(CXXFLAGS) $(SOFLAGS) $^ -o $@

$(BINDIR)/%:  $(OBJDIR)/%.o $(patsubst %,$(ROOTCOREDIR)/lib/lib%.so,$(DEPLIST)) $(LIBFILE)
	@echo "Linking $@"
	@mkdir -p $(BINDIR)
	@$(LD) -L../StandAlone $(LDFLAGS) $(shell $(ROOTCOREDIR)/scripts/get_ldflags.sh $(PACKAGE))  $(ROOTLIBS) $< -o $@

-include $(DEPFILES)
